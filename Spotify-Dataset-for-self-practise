{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "242f8cef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:01.243749Z",
     "iopub.status.busy": "2025-02-24T22:38:01.243349Z",
     "iopub.status.idle": "2025-02-24T22:38:01.255498Z",
     "shell.execute_reply": "2025-02-24T22:38:01.254150Z"
    },
    "papermill": {
     "duration": 0.026838,
     "end_time": "2025-02-24T22:38:01.257432",
     "exception": false,
     "start_time": "2025-02-24T22:38:01.230594",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/spotify-dataset-for-self-practise/spotify_2023.csv\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "# List all files and folders in /kaggle/input\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cc80b4b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:01.280494Z",
     "iopub.status.busy": "2025-02-24T22:38:01.280139Z",
     "iopub.status.idle": "2025-02-24T22:38:04.376457Z",
     "shell.execute_reply": "2025-02-24T22:38:04.374863Z"
    },
    "papermill": {
     "duration": 3.110149,
     "end_time": "2025-02-24T22:38:04.378695",
     "exception": false,
     "start_time": "2025-02-24T22:38:01.268546",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset loaded successfully.\n",
      "                            track_name    artist(s)_name  artist_count  \\\n",
      "0  Seven (feat. Latto) (Explicit Ver.)  Latto, Jung Kook             2   \n",
      "1                                 LALA       Myke Towers             1   \n",
      "2                              vampire    Olivia Rodrigo             1   \n",
      "3                         Cruel Summer      Taylor Swift             1   \n",
      "4                       WHERE SHE GOES         Bad Bunny             1   \n",
      "\n",
      "   released_year  released_month  released_day  in_spotify_playlists  \\\n",
      "0           2023               7            14                   553   \n",
      "1           2023               3            23                  1474   \n",
      "2           2023               6            30                  1397   \n",
      "3           2019               8            23                  7858   \n",
      "4           2023               5            18                  3133   \n",
      "\n",
      "   in_spotify_charts    streams  in_apple_playlists  ...  bpm key   mode  \\\n",
      "0                147  141381703                  43  ...  125   B  Major   \n",
      "1                 48  133716286                  48  ...   92  C#  Major   \n",
      "2                113  140003974                  94  ...  138   F  Major   \n",
      "3                100  800840817                 116  ...  170   A  Major   \n",
      "4                 50  303236322                  84  ...  144   A  Minor   \n",
      "\n",
      "  danceability_%  valence_% energy_% acousticness_%  instrumentalness_%  \\\n",
      "0             80         89       83             31                   0   \n",
      "1             71         61       74              7                   0   \n",
      "2             51         32       53             17                   0   \n",
      "3             55         58       72             11                   0   \n",
      "4             65         23       80             14                  63   \n",
      "\n",
      "   liveness_%  speechiness_%  \n",
      "0           8              4  \n",
      "1          10              4  \n",
      "2          31              6  \n",
      "3          11             15  \n",
      "4          11              6  \n",
      "\n",
      "[5 rows x 24 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Correct file path based on the output\n",
    "file_path = \"/kaggle/input/spotify-dataset-for-self-practise/spotify_2023.csv\"\n",
    "\n",
    "# Load the CSV file\n",
    "try:\n",
    "    df = pd.read_csv(file_path, encoding=\"ISO-8859-1\")\n",
    "    print(\"Dataset loaded successfully.\")\n",
    "    print(df.head())\n",
    "except FileNotFoundError:\n",
    "    print(f\"File not found: {file_path}. Please check the file path.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1786bc8",
   "metadata": {
    "papermill": {
     "duration": 0.011413,
     "end_time": "2025-02-24T22:38:04.401271",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.389858",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Introduction\n",
    "This Jupyter Notebook explores data manipulation, aggregation, and visualization techniques using Python’s Pandas, Matplotlib, and Seaborn libraries. The key objectives of this analysis include:\n",
    "\n",
    "📌 Data Cleaning and Preparation\n",
    "✔ Handling missing values in key columns.\n",
    "✔ Standardizing and transforming categorical features (e.g., mode, release_day_name).\n",
    "✔ Creating new derived features, such as decade classification and energy levels.\n",
    "\n",
    "📌 Feature Engineering & Data Transformation\n",
    "✔ Extracting release trends from date-based columns.\n",
    "✔ Categorizing song durations and popularity levels dynamically.\n",
    "✔ Applying lambda functions, apply(), map(), and filter() for efficient data transformations.\n",
    "✔ Using groupby() and aggregation functions to analyze trends in song streams.\n",
    "✔ Ranking artists based on total streams using rank().\n",
    "\n",
    "📌 Data Aggregation and Trend Analysis\n",
    "✔ Identifying the most common musical keys used in songs.\n",
    "✔ Tracking song releases over time with rolling averages.\n",
    "✔ Comparing Major vs. Minor key distributions in song compositions.\n",
    "\n",
    "📌 Data Visualization\n",
    "✔ Bar plots for ranking top artists and stream counts.\n",
    "✔ Box plots to analyze stream distribution per release year.\n",
    "✔ Heatmaps to examine feature correlations.\n",
    "✔ Pie charts to understand song popularity distribution.\n",
    "\n",
    "📌 Dataset Description\n",
    "The dataset consists of Spotify streaming statistics and includes features such as:\n",
    "\n",
    "🎵 track_name – Song title.\n",
    "🎤 artist(s)_name – Name(s) of performing artists.\n",
    "🔢 streams – Number of times the song was streamed.\n",
    "📅 released_year, released_month, released_day – Date of song release.\n",
    "🎼 energy_%, danceability_%, valence_% – Audio feature metrics.\n",
    "📊 in_spotify_playlists – Number of Spotify playlists featuring the song.\n",
    "🎹 mode – Musical mode (Major or Minor).\n",
    "🎯 Purpose\n",
    "This analysis is designed for:\n",
    "✔ Exploring real-world datasets to develop data analyst skills.\n",
    "✔ Practicing data transformation, aggregation, and visualization techniques.\n",
    "✔ Preparing for data analyst interviews by working with structured workflows.\n",
    "\n",
    "📌 Table of Contents\n",
    "1️⃣ Data Cleaning & Preparation\n",
    "2️⃣ Feature Engineering & Transformations (apply(), map(), filter(), groupby(), rank())\n",
    "3️⃣ Data Aggregation & Trend Analysis\n",
    "4️⃣ Data Visualization & Insights\n",
    "5️⃣ Conclusion and Key Takeaways"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "8f5e637f",
   "metadata": {
    "papermill": {
     "duration": 0.013411,
     "end_time": "2025-02-24T22:38:04.426688",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.413277",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "📌 Day 1 - Data Cleaning & Exploratory Data Analysis (EDA) (Spotify Dataset)\n",
    "1️⃣ Convert and Extract Date Components\n",
    "✅ Q1: Convert Release Date to Datetime Format\n",
    "🔹 Convert the released_year, released_month, and released_day columns into a single datetime column called release_date.\n",
    "\n",
    "✅ Q2: Extract Additional Date Components from release_date\n",
    "🔹 Extract the following date-based insights:\n",
    "\n",
    "a) Extract the day of the week (Monday, Tuesday, etc.) → release_day_name\n",
    "b) Extract the quarter (Q1, Q2, Q3, Q4) → release_quarter\n",
    "c) Determine if the song was released on a weekend (Yes/No) → is_weekend\n",
    "2️⃣ Handle Missing Data\n",
    "✅ Q3: Identify Missing Values\n",
    "🔹 Find the total missing values in each column.\n",
    "\n",
    "✅ Q4: Handle Missing Values in the key Column\n",
    "🔹 Replace missing values in key with \"Unknown\".\n",
    "\n",
    "✅ Q5: Fill Missing Values in in_shazam_charts\n",
    "🔹 Replace missing values with 0 (assuming missing means no chart appearance).\n",
    "\n",
    "3️⃣ Analyze Release Trends\n",
    "✅ Q6: Analyze Song Releases by Day of the Week 🚀\n",
    "🔹 Identify which day of the week has the most song releases.\n",
    "🔹 Are more songs released on weekends or weekdays?\n",
    "\n",
    "✅ Q7: Identify the Most Popular Release Quarter 🚀\n",
    "🔹 Determine which quarter (Q1-Q4) has the highest number of song releases.\n",
    "\n",
    "✅ Q8: Plot the Number of Songs Released Per Year\n",
    "🔹 Create a bar chart showing the number of songs released each year.\n",
    "\n",
    "✅ Q9: Categorize Songs by Decade\n",
    "🔹 Create a decade column (1990s, 2000s, 2010s, 2020s).\n",
    "\n",
    "✅ Q10: Identify the Top 10 Most Streamed Artists\n",
    "🔹 Find the top 10 artists based on total streams.\n",
    "\n",
    "✅ Q11: Rank Artists by Total Streams\n",
    "🔹 Create artist_rank based on total streams.\n",
    "\n",
    "4️⃣ Data Aggregation & Trend Analysis\n",
    "✅ Q12: Determine the Most Common Musical Key\n",
    "🔹 Identify the most frequently used musical key in songs.\n",
    "\n",
    "✅ Q13: Find the Most Common Energy Level Category\n",
    "🔹 Classify energy_% into:\n",
    "\n",
    "\"Low\" (0-40)\n",
    "\"Medium\" (41-70)\n",
    "\"High\" (71-100)\n",
    "✅ Q14: Compare the Number of Major vs. Minor Key Songs\n",
    "🔹 Count the number of Major vs. Minor key songs.\n",
    "\n",
    "✅ Q15: Identify Songs with High Streams but Low Playlist Appearances\n",
    "🔹 Find songs with over 10M streams but fewer than 50 playlists.\n",
    "\n",
    "streams.\r\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    ".\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2887b467",
   "metadata": {
    "papermill": {
     "duration": 0.011105,
     "end_time": "2025-02-24T22:38:04.449372",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.438267",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "7dfa3cda",
   "metadata": {
    "papermill": {
     "duration": 0.011363,
     "end_time": "2025-02-24T22:38:04.471579",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.460216",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Q1: Convert Release Date to Datetime Format\n",
    "Convert the released_year, released_month, and released_day columns into a single datetime column called release_date."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "038d376b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.497963Z",
     "iopub.status.busy": "2025-02-24T22:38:04.497547Z",
     "iopub.status.idle": "2025-02-24T22:38:04.524730Z",
     "shell.execute_reply": "2025-02-24T22:38:04.523038Z"
    },
    "papermill": {
     "duration": 0.042446,
     "end_time": "2025-02-24T22:38:04.526768",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.484322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 953 entries, 0 to 952\n",
      "Data columns (total 24 columns):\n",
      " #   Column                Non-Null Count  Dtype \n",
      "---  ------                --------------  ----- \n",
      " 0   track_name            953 non-null    object\n",
      " 1   artist(s)_name        953 non-null    object\n",
      " 2   artist_count          953 non-null    int64 \n",
      " 3   released_year         953 non-null    int64 \n",
      " 4   released_month        953 non-null    int64 \n",
      " 5   released_day          953 non-null    int64 \n",
      " 6   in_spotify_playlists  953 non-null    int64 \n",
      " 7   in_spotify_charts     953 non-null    int64 \n",
      " 8   streams               953 non-null    object\n",
      " 9   in_apple_playlists    953 non-null    int64 \n",
      " 10  in_apple_charts       953 non-null    int64 \n",
      " 11  in_deezer_playlists   953 non-null    object\n",
      " 12  in_deezer_charts      953 non-null    int64 \n",
      " 13  in_shazam_charts      903 non-null    object\n",
      " 14  bpm                   953 non-null    int64 \n",
      " 15  key                   858 non-null    object\n",
      " 16  mode                  953 non-null    object\n",
      " 17  danceability_%        953 non-null    int64 \n",
      " 18  valence_%             953 non-null    int64 \n",
      " 19  energy_%              953 non-null    int64 \n",
      " 20  acousticness_%        953 non-null    int64 \n",
      " 21  instrumentalness_%    953 non-null    int64 \n",
      " 22  liveness_%            953 non-null    int64 \n",
      " 23  speechiness_%         953 non-null    int64 \n",
      "dtypes: int64(17), object(7)\n",
      "memory usage: 178.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()        #checking the data type of the 3 columns we need to merge to ensure they are numerical."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "37955504",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.550601Z",
     "iopub.status.busy": "2025-02-24T22:38:04.550258Z",
     "iopub.status.idle": "2025-02-24T22:38:04.564690Z",
     "shell.execute_reply": "2025-02-24T22:38:04.563390Z"
    },
    "papermill": {
     "duration": 0.028341,
     "end_time": "2025-02-24T22:38:04.566718",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.538377",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['release_date'] = pd.to_datetime(df.rename(columns={\n",
    "    'released_year': 'year',\n",
    "    'released_month': 'month',\n",
    "    'released_day': 'day'\n",
    "})[['year', 'month', 'day']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b8d3bb7e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.592973Z",
     "iopub.status.busy": "2025-02-24T22:38:04.592572Z",
     "iopub.status.idle": "2025-02-24T22:38:04.602362Z",
     "shell.execute_reply": "2025-02-24T22:38:04.601075Z"
    },
    "papermill": {
     "duration": 0.025211,
     "end_time": "2025-02-24T22:38:04.604607",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.579396",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0   2023-07-14\n",
       "1   2023-03-23\n",
       "Name: release_date, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['release_date'].head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "255864c2",
   "metadata": {
    "papermill": {
     "duration": 0.012148,
     "end_time": "2025-02-24T22:38:04.629514",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.617366",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "26455178",
   "metadata": {
    "papermill": {
     "duration": 0.010815,
     "end_time": "2025-02-24T22:38:04.652659",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.641844",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Q2: Extract Additional Date Components from release_date:---->\n",
    "\n",
    "a) Extract the day of the week (Monday, Tuesday, etc.) and store it in release_day_name.\n",
    "b) Extract the quarter (Q1, Q2, Q3, Q4) and store it in release_quarter.\n",
    "c) Determine whether the song was released on a weekend (Yes or No) and store it in is_weekend."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "14ad5824",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.677331Z",
     "iopub.status.busy": "2025-02-24T22:38:04.676882Z",
     "iopub.status.idle": "2025-02-24T22:38:04.684256Z",
     "shell.execute_reply": "2025-02-24T22:38:04.682982Z"
    },
    "papermill": {
     "duration": 0.022736,
     "end_time": "2025-02-24T22:38:04.686358",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.663622",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['release_day_name'] = df['release_date'].dt.day_name()         # A) for day name ex Mon, Tue, Wed ....."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "54abae6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.713675Z",
     "iopub.status.busy": "2025-02-24T22:38:04.713284Z",
     "iopub.status.idle": "2025-02-24T22:38:04.719563Z",
     "shell.execute_reply": "2025-02-24T22:38:04.718324Z"
    },
    "papermill": {
     "duration": 0.022539,
     "end_time": "2025-02-24T22:38:04.721914",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.699375",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['release_quarter'] = df['release_date'].dt.quarter             # B) for dquarters ex Q1 , Q2, Q3 ....."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e42f420d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.747356Z",
     "iopub.status.busy": "2025-02-24T22:38:04.747018Z",
     "iopub.status.idle": "2025-02-24T22:38:04.757010Z",
     "shell.execute_reply": "2025-02-24T22:38:04.755867Z"
    },
    "papermill": {
     "duration": 0.025121,
     "end_time": "2025-02-24T22:38:04.759169",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.734048",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "is_weekend\n",
       "No     893\n",
       "Yes     60\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['is_weekend'] = df['release_day_name'].apply(lambda x : 'Yes' if x in ['Saturday','Sunday'] else 'No')\n",
    "\n",
    "df['is_weekend'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8578379",
   "metadata": {
    "papermill": {
     "duration": 0.010957,
     "end_time": "2025-02-24T22:38:04.781963",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.771006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c5a60c4f",
   "metadata": {
    "papermill": {
     "duration": 0.011762,
     "end_time": "2025-02-24T22:38:04.805502",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.793740",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q3: Identify Missing Values.\n",
    "🔹 Find total missing values in each column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7d44eb17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.830400Z",
     "iopub.status.busy": "2025-02-24T22:38:04.829999Z",
     "iopub.status.idle": "2025-02-24T22:38:04.840069Z",
     "shell.execute_reply": "2025-02-24T22:38:04.838922Z"
    },
    "papermill": {
     "duration": 0.025282,
     "end_time": "2025-02-24T22:38:04.841929",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.816647",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "track_name               0\n",
       "artist(s)_name           0\n",
       "artist_count             0\n",
       "released_year            0\n",
       "released_month           0\n",
       "released_day             0\n",
       "in_spotify_playlists     0\n",
       "in_spotify_charts        0\n",
       "streams                  0\n",
       "in_apple_playlists       0\n",
       "in_apple_charts          0\n",
       "in_deezer_playlists      0\n",
       "in_deezer_charts         0\n",
       "in_shazam_charts        50\n",
       "bpm                      0\n",
       "key                     95\n",
       "mode                     0\n",
       "danceability_%           0\n",
       "valence_%                0\n",
       "energy_%                 0\n",
       "acousticness_%           0\n",
       "instrumentalness_%       0\n",
       "liveness_%               0\n",
       "speechiness_%            0\n",
       "release_date             0\n",
       "release_day_name         0\n",
       "release_quarter          0\n",
       "is_weekend               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97f9e8f1",
   "metadata": {
    "papermill": {
     "duration": 0.012534,
     "end_time": "2025-02-24T22:38:04.866472",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.853938",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "b625ba9e",
   "metadata": {
    "papermill": {
     "duration": 0.01325,
     "end_time": "2025-02-24T22:38:04.893422",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.880172",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q4: Handle Missing Values in the Key Column.\r\n",
    "🔹 Replace missing values in key with \"Unknown\".\r\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8b38091e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.918340Z",
     "iopub.status.busy": "2025-02-24T22:38:04.917993Z",
     "iopub.status.idle": "2025-02-24T22:38:04.924405Z",
     "shell.execute_reply": "2025-02-24T22:38:04.922593Z"
    },
    "papermill": {
     "duration": 0.021239,
     "end_time": "2025-02-24T22:38:04.926567",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.905328",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['key'] = df['key'].fillna('Unknown')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "42eca09b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:04.954861Z",
     "iopub.status.busy": "2025-02-24T22:38:04.954432Z",
     "iopub.status.idle": "2025-02-24T22:38:04.962195Z",
     "shell.execute_reply": "2025-02-24T22:38:04.960651Z"
    },
    "papermill": {
     "duration": 0.025179,
     "end_time": "2025-02-24T22:38:04.964996",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.939817",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['key'].isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9b3f608",
   "metadata": {
    "papermill": {
     "duration": 0.011945,
     "end_time": "2025-02-24T22:38:04.989528",
     "exception": false,
     "start_time": "2025-02-24T22:38:04.977583",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "4d46efe9",
   "metadata": {
    "papermill": {
     "duration": 0.011776,
     "end_time": "2025-02-24T22:38:05.012793",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.001017",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q5: Fill Missing Values in in_shazam_charts.\n",
    "🔹 Replace missing values with 0 (assuming missing means no chart appearance)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fa54107e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.037635Z",
     "iopub.status.busy": "2025-02-24T22:38:05.037252Z",
     "iopub.status.idle": "2025-02-24T22:38:05.043140Z",
     "shell.execute_reply": "2025-02-24T22:38:05.041923Z"
    },
    "papermill": {
     "duration": 0.021149,
     "end_time": "2025-02-24T22:38:05.045186",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.024037",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['in_shazam_charts'] = df['in_shazam_charts'].fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bdc3b7b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.069995Z",
     "iopub.status.busy": "2025-02-24T22:38:05.069545Z",
     "iopub.status.idle": "2025-02-24T22:38:05.076565Z",
     "shell.execute_reply": "2025-02-24T22:38:05.075302Z"
    },
    "papermill": {
     "duration": 0.021699,
     "end_time": "2025-02-24T22:38:05.078406",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.056707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['in_shazam_charts'].isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ad3486a8",
   "metadata": {
    "papermill": {
     "duration": 0.011328,
     "end_time": "2025-02-24T22:38:05.102108",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.090780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "67a32468",
   "metadata": {
    "papermill": {
     "duration": 0.011103,
     "end_time": "2025-02-24T22:38:05.125053",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.113950",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q6: Analyze Song Releases by Day of the Week.\n",
    "🔹 Find out which day of the week sees the most song releases.\n",
    "🔹 Are more songs released on weekends or weekdays?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "aebb1165",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.149560Z",
     "iopub.status.busy": "2025-02-24T22:38:05.149170Z",
     "iopub.status.idle": "2025-02-24T22:38:05.157542Z",
     "shell.execute_reply": "2025-02-24T22:38:05.156410Z"
    },
    "papermill": {
     "duration": 0.023025,
     "end_time": "2025-02-24T22:38:05.159448",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.136423",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "release_day_name\n",
       "Saturday      23\n",
       "Sunday        37\n",
       "Monday        60\n",
       "Tuesday       65\n",
       "Wednesday     87\n",
       "Thursday     155\n",
       "Friday       526\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['release_day_name'].value_counts().sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "066b6cbb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.185135Z",
     "iopub.status.busy": "2025-02-24T22:38:05.184775Z",
     "iopub.status.idle": "2025-02-24T22:38:05.192522Z",
     "shell.execute_reply": "2025-02-24T22:38:05.191176Z"
    },
    "papermill": {
     "duration": 0.022309,
     "end_time": "2025-02-24T22:38:05.194189",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.171880",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Friday', 526)\n"
     ]
    }
   ],
   "source": [
    "most_common_day = df['release_day_name'].value_counts().idxmax()\n",
    "most_common_day_count = df['release_day_name'].value_counts().max()\n",
    "\n",
    "print((most_common_day, most_common_day_count))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6bd9dfe4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.219415Z",
     "iopub.status.busy": "2025-02-24T22:38:05.219041Z",
     "iopub.status.idle": "2025-02-24T22:38:05.226769Z",
     "shell.execute_reply": "2025-02-24T22:38:05.225669Z"
    },
    "papermill": {
     "duration": 0.022047,
     "end_time": "2025-02-24T22:38:05.228551",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.206504",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "is_weekend\n",
       "No     893\n",
       "Yes     60\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['is_weekend'].value_counts()   # this shows more songs are released on weekdays."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "145d24d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.253531Z",
     "iopub.status.busy": "2025-02-24T22:38:05.253073Z",
     "iopub.status.idle": "2025-02-24T22:38:05.616848Z",
     "shell.execute_reply": "2025-02-24T22:38:05.615529Z"
    },
    "papermill": {
     "duration": 0.379449,
     "end_time": "2025-02-24T22:38:05.619926",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.240477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize=(8, 5))\n",
    "\n",
    "\n",
    "sns.countplot(data=df, x='release_day_name', order=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\n",
    "\n",
    "\n",
    "plt.xlabel(\"Day of the Week\")\n",
    "plt.ylabel(\"Number of Songs Released\")\n",
    "plt.title(\"Song Releases by Day of the Week\")\n",
    "\n",
    "\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a8acad18",
   "metadata": {
    "papermill": {
     "duration": 0.017345,
     "end_time": "2025-02-24T22:38:05.662507",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.645162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "437179fc",
   "metadata": {
    "papermill": {
     "duration": 0.019897,
     "end_time": "2025-02-24T22:38:05.704083",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.684186",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q7: Identify the Most Popular Release Quarter.\n",
    "🔹 Determine which quarter (Q1-Q4) sees the highest number of releases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "90b8fdf7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.745843Z",
     "iopub.status.busy": "2025-02-24T22:38:05.745390Z",
     "iopub.status.idle": "2025-02-24T22:38:05.756377Z",
     "shell.execute_reply": "2025-02-24T22:38:05.755137Z"
    },
    "papermill": {
     "duration": 0.038741,
     "end_time": "2025-02-24T22:38:05.758309",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.719568",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "release_quarter\n",
       "1    281\n",
       "2    280\n",
       "4    228\n",
       "3    164\n",
       "Name: track_name, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "popular_quarter = df.groupby('release_quarter')['track_name'].count().sort_values(ascending = False)\n",
    "popular_quarter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "67eea4fc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.785767Z",
     "iopub.status.busy": "2025-02-24T22:38:05.785370Z",
     "iopub.status.idle": "2025-02-24T22:38:05.794696Z",
     "shell.execute_reply": "2025-02-24T22:38:05.793231Z"
    },
    "papermill": {
     "duration": 0.025194,
     "end_time": "2025-02-24T22:38:05.796659",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.771465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 281)\n"
     ]
    }
   ],
   "source": [
    "most_popular_quarter = df['release_quarter'].value_counts().idxmax()\n",
    "most_popular_quarter_count = df['release_quarter'].value_counts().max()\n",
    "\n",
    "print((most_popular_quarter, most_popular_quarter_count))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6f16a1bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:05.888969Z",
     "iopub.status.busy": "2025-02-24T22:38:05.888524Z",
     "iopub.status.idle": "2025-02-24T22:38:06.065194Z",
     "shell.execute_reply": "2025-02-24T22:38:06.063934Z"
    },
    "papermill": {
     "duration": 0.193845,
     "end_time": "2025-02-24T22:38:06.067519",
     "exception": false,
     "start_time": "2025-02-24T22:38:05.873674",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "\n",
    "\n",
    "sns.countplot(data=df, x='release_quarter', order=[1, 2, 3, 4], palette=\"viridis\")\n",
    "\n",
    "\n",
    "plt.xlabel(\"Quarter\")\n",
    "plt.ylabel(\"Number of Songs Released\")\n",
    "plt.title(\"Song Releases by Quarter\")\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "54b3854a",
   "metadata": {
    "papermill": {
     "duration": 0.013148,
     "end_time": "2025-02-24T22:38:06.095218",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.082070",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "7ba9ec1d",
   "metadata": {
    "papermill": {
     "duration": 0.012972,
     "end_time": "2025-02-24T22:38:06.121487",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.108515",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q8: Plot the Number of Songs Released Per Year.\n",
    "🔹 Create a bar chart showing the number of songs released each year."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "45363e5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:06.149387Z",
     "iopub.status.busy": "2025-02-24T22:38:06.148997Z",
     "iopub.status.idle": "2025-02-24T22:38:06.156336Z",
     "shell.execute_reply": "2025-02-24T22:38:06.155253Z"
    },
    "papermill": {
     "duration": 0.023659,
     "end_time": "2025-02-24T22:38:06.158362",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.134703",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "song_per_year = df['released_year'].value_counts().sort_index()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c38d5072",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:06.187189Z",
     "iopub.status.busy": "2025-02-24T22:38:06.186805Z",
     "iopub.status.idle": "2025-02-24T22:38:06.756284Z",
     "shell.execute_reply": "2025-02-24T22:38:06.755009Z"
    },
    "papermill": {
     "duration": 0.58604,
     "end_time": "2025-02-24T22:38:06.758393",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.172353",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (12,6))\n",
    "\n",
    "\n",
    "sns.barplot(x = song_per_year.index, y =  song_per_year.values, palette=\"viridis\")\n",
    "\n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Number of Songs Released\")\n",
    "plt.title(\"Song Releases by Year\")\n",
    "\n",
    "\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93af67e8",
   "metadata": {
    "papermill": {
     "duration": 0.014691,
     "end_time": "2025-02-24T22:38:06.788924",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.774233",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "93819bc6",
   "metadata": {
    "papermill": {
     "duration": 0.015152,
     "end_time": "2025-02-24T22:38:06.818539",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.803387",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q9: Categorize Songs by Decade.\n",
    "🔹 Create a decade column (1990s, 2000s, 2010s, 2020s)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9818bf00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:06.849547Z",
     "iopub.status.busy": "2025-02-24T22:38:06.849180Z",
     "iopub.status.idle": "2025-02-24T22:38:06.855628Z",
     "shell.execute_reply": "2025-02-24T22:38:06.854644Z"
    },
    "papermill": {
     "duration": 0.023632,
     "end_time": "2025-02-24T22:38:06.857618",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.833986",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['added_Decade'] = df['released_year'].apply(lambda x : str((x//10) * 10) + \"'s\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b2394b90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:06.891715Z",
     "iopub.status.busy": "2025-02-24T22:38:06.891360Z",
     "iopub.status.idle": "2025-02-24T22:38:06.899380Z",
     "shell.execute_reply": "2025-02-24T22:38:06.898232Z"
    },
    "papermill": {
     "duration": 0.027667,
     "end_time": "2025-02-24T22:38:06.901402",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.873735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2020's\n",
       "1    2020's\n",
       "Name: added_Decade, dtype: object"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['added_Decade'].head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "399ed250",
   "metadata": {
    "papermill": {
     "duration": 0.016274,
     "end_time": "2025-02-24T22:38:06.933845",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.917571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "1c0fd3e3",
   "metadata": {
    "papermill": {
     "duration": 0.015546,
     "end_time": "2025-02-24T22:38:06.965590",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.950044",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q10: Identify the Top 10 Most Streamed Artists.\n",
    "🔹 Find the top 10 artists based on total streams."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2a836537",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.000402Z",
     "iopub.status.busy": "2025-02-24T22:38:07.000037Z",
     "iopub.status.idle": "2025-02-24T22:38:07.009986Z",
     "shell.execute_reply": "2025-02-24T22:38:07.007976Z"
    },
    "papermill": {
     "duration": 0.030466,
     "end_time": "2025-02-24T22:38:07.012379",
     "exception": false,
     "start_time": "2025-02-24T22:38:06.981913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['streams'] = pd.to_numeric(df['streams'], errors='coerce')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e4f7413f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.057480Z",
     "iopub.status.busy": "2025-02-24T22:38:07.057110Z",
     "iopub.status.idle": "2025-02-24T22:38:07.073223Z",
     "shell.execute_reply": "2025-02-24T22:38:07.071939Z"
    },
    "papermill": {
     "duration": 0.044082,
     "end_time": "2025-02-24T22:38:07.075289",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.031207",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "artist(s)_name\n",
       "The Weeknd         14,185,552,870\n",
       "Taylor Swift       14,053,658,300\n",
       "Ed Sheeran         13,908,947,204\n",
       "Harry Styles       11,608,645,649\n",
       "Bad Bunny           9,997,799,607\n",
       "Olivia Rodrigo      7,442,148,916\n",
       "Eminem              6,183,805,596\n",
       "Bruno Mars          5,846,920,599\n",
       "Arctic Monkeys      5,569,806,731\n",
       "Imagine Dragons     5,272,484,650\n",
       "Name: streams, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_ten_artist = df.groupby('artist(s)_name')['streams'].sum().sort_values(ascending = False).head(10)\n",
    "\n",
    "\n",
    "top_ten_artist = top_ten_artist.apply(lambda x: f\"{x:,.0f}\")        #   ',' and '.0f' Adds commas and removes decimals\n",
    "\n",
    "top_ten_artist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0ffe3717",
   "metadata": {
    "papermill": {
     "duration": 0.014844,
     "end_time": "2025-02-24T22:38:07.107289",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.092445",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b0269a1e",
   "metadata": {
    "papermill": {
     "duration": 0.015663,
     "end_time": "2025-02-24T22:38:07.138481",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.122818",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q11: Rank Artists by Total Streams.\n",
    "🔹 Create artist_rank based on total streams."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6f9d0d9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.169736Z",
     "iopub.status.busy": "2025-02-24T22:38:07.169372Z",
     "iopub.status.idle": "2025-02-24T22:38:07.188367Z",
     "shell.execute_reply": "2025-02-24T22:38:07.187163Z"
    },
    "papermill": {
     "duration": 0.036757,
     "end_time": "2025-02-24T22:38:07.190525",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.153768",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      artist(s)_name       streams  artist_rank\n",
      "572       The Weeknd  1.418555e+10          1.0\n",
      "558     Taylor Swift  1.405366e+10          2.0\n",
      "159       Ed Sheeran  1.390895e+10          3.0\n",
      "223     Harry Styles  1.160865e+10          4.0\n",
      "43         Bad Bunny  9.997800e+09          5.0\n",
      "431   Olivia Rodrigo  7.442149e+09          6.0\n",
      "171           Eminem  6.183806e+09          7.0\n",
      "75        Bruno Mars  5.846921e+09          8.0\n",
      "25    Arctic Monkeys  5.569807e+09          9.0\n",
      "229  Imagine Dragons  5.272485e+09         10.0\n"
     ]
    }
   ],
   "source": [
    "df['streams'] = pd.to_numeric(df['streams'], errors='coerce')\n",
    "\n",
    "\n",
    "artist_streams = df.groupby('artist(s)_name')['streams'].sum().reset_index()\n",
    "\n",
    "\n",
    "artist_streams['artist_rank'] = artist_streams['streams'].rank(method='dense', ascending=False)\n",
    "\n",
    "\n",
    "artist_streams = artist_streams.sort_values(by='artist_rank')\n",
    "print(artist_streams.head(10))  # Show top 10 ranked artists\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f614e93e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.222817Z",
     "iopub.status.busy": "2025-02-24T22:38:07.222412Z",
     "iopub.status.idle": "2025-02-24T22:38:07.233511Z",
     "shell.execute_reply": "2025-02-24T22:38:07.231736Z"
    },
    "papermill": {
     "duration": 0.029459,
     "end_time": "2025-02-24T22:38:07.235559",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.206100",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      artist(s)_name         streams  artist_rank\n",
      "572       The Weeknd  14,185,552,870            1\n",
      "558     Taylor Swift  14,053,658,300            2\n",
      "159       Ed Sheeran  13,908,947,204            3\n",
      "223     Harry Styles  11,608,645,649            4\n",
      "43         Bad Bunny   9,997,799,607            5\n",
      "431   Olivia Rodrigo   7,442,148,916            6\n",
      "171           Eminem   6,183,805,596            7\n",
      "75        Bruno Mars   5,846,920,599            8\n",
      "25    Arctic Monkeys   5,569,806,731            9\n",
      "229  Imagine Dragons   5,272,484,650           10\n"
     ]
    }
   ],
   "source": [
    "# Convert streams to readable format (with commas)\n",
    "artist_streams['streams'] = artist_streams['streams'].apply(lambda x: f\"{x:,.0f}\")\n",
    "\n",
    "# Convert rank to integer (remove decimal places)\n",
    "artist_streams['artist_rank'] = artist_streams['artist_rank'].astype(int)\n",
    "\n",
    "# Show top 10 ranked artists\n",
    "print(artist_streams.head(10))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b800d312",
   "metadata": {
    "papermill": {
     "duration": 0.014338,
     "end_time": "2025-02-24T22:38:07.266337",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.251999",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "f14c1471",
   "metadata": {
    "papermill": {
     "duration": 0.015381,
     "end_time": "2025-02-24T22:38:07.297376",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.281995",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q12: Determine the Most Common Musical Key.\n",
    "🔹 Identify the most frequently used musical key in songs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "6ecd706e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.329246Z",
     "iopub.status.busy": "2025-02-24T22:38:07.328823Z",
     "iopub.status.idle": "2025-02-24T22:38:07.337400Z",
     "shell.execute_reply": "2025-02-24T22:38:07.336139Z"
    },
    "papermill": {
     "duration": 0.02691,
     "end_time": "2025-02-24T22:38:07.339350",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.312440",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "key\n",
       "C#         120\n",
       "G           96\n",
       "Unknown     95\n",
       "G#          91\n",
       "F           89\n",
       "B           81\n",
       "D           81\n",
       "A           75\n",
       "F#          73\n",
       "E           62\n",
       "A#          57\n",
       "D#          33\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['key'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cfed6675",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.372399Z",
     "iopub.status.busy": "2025-02-24T22:38:07.372018Z",
     "iopub.status.idle": "2025-02-24T22:38:07.646350Z",
     "shell.execute_reply": "2025-02-24T22:38:07.644748Z"
    },
    "papermill": {
     "duration": 0.294176,
     "end_time": "2025-02-24T22:38:07.649766",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.355590",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 5))\n",
    "\n",
    "\n",
    "\n",
    "sns.barplot(x=df['key'].value_counts().index, y=df['key'].value_counts().values, palette=\"magma\")\n",
    "\n",
    "\n",
    "plt.xlabel(\"Musical Key\")\n",
    "plt.ylabel(\"Number of Songs\")\n",
    "plt.title(\"Distribution of Songs by Musical Key\")\n",
    "\n",
    "\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba78fae4",
   "metadata": {
    "papermill": {
     "duration": 0.018809,
     "end_time": "2025-02-24T22:38:07.686113",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.667304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c4bccfd2",
   "metadata": {
    "papermill": {
     "duration": 0.016093,
     "end_time": "2025-02-24T22:38:07.719466",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.703373",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q13: Find the Most Common Energy Level Category.\n",
    "🔹 Classify energy_% into \"Low\" (0-40), \"Medium\" (41-70), \"High\" (71-100)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d709999f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.754608Z",
     "iopub.status.busy": "2025-02-24T22:38:07.754240Z",
     "iopub.status.idle": "2025-02-24T22:38:07.760862Z",
     "shell.execute_reply": "2025-02-24T22:38:07.759835Z"
    },
    "papermill": {
     "duration": 0.026492,
     "end_time": "2025-02-24T22:38:07.762754",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.736262",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Energy_level_category'] = df['energy_%'].apply(lambda x : 'Low' if 0 < x <= 40 else 'Medium' if 40 < x <= 70 else 'High')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "be9cf85b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.795879Z",
     "iopub.status.busy": "2025-02-24T22:38:07.795395Z",
     "iopub.status.idle": "2025-02-24T22:38:07.803982Z",
     "shell.execute_reply": "2025-02-24T22:38:07.802813Z"
    },
    "papermill": {
     "duration": 0.027489,
     "end_time": "2025-02-24T22:38:07.806332",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.778843",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Medium : 495\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "most_common_energy_level = df['Energy_level_category'].value_counts().idxmax()\n",
    "most_common_energy_count = df['Energy_level_category'].value_counts().max()\n",
    "\n",
    "\n",
    "print(most_common_energy_level,':', most_common_energy_count)    # most common energy category type."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "152bed96",
   "metadata": {
    "papermill": {
     "duration": 0.016753,
     "end_time": "2025-02-24T22:38:07.839961",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.823208",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "9a178058",
   "metadata": {
    "papermill": {
     "duration": 0.016985,
     "end_time": "2025-02-24T22:38:07.874362",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.857377",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q14: Compare the Number of Major vs. Minor Key Songs.\n",
    "🔹 Count the number of Major vs. Minor key songs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "dcd95c2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:07.909223Z",
     "iopub.status.busy": "2025-02-24T22:38:07.908825Z",
     "iopub.status.idle": "2025-02-24T22:38:07.917138Z",
     "shell.execute_reply": "2025-02-24T22:38:07.916193Z"
    },
    "papermill": {
     "duration": 0.027417,
     "end_time": "2025-02-24T22:38:07.919167",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.891750",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "mode\n",
       "Major    550\n",
       "Minor    403\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['mode'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d92778d",
   "metadata": {
    "papermill": {
     "duration": 0.015909,
     "end_time": "2025-02-24T22:38:07.950924",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.935015",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "132d46a7",
   "metadata": {
    "papermill": {
     "duration": 0.015683,
     "end_time": "2025-02-24T22:38:07.983265",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.967582",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "✅ Q15: Identify Songs with High Streams but Low Playlist Appearances.\n",
    "🔹 Find songs over 10M streams but in fewer than 50 playlists."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "dc12a17c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-24T22:38:08.016996Z",
     "iopub.status.busy": "2025-02-24T22:38:08.016600Z",
     "iopub.status.idle": "2025-02-24T22:38:08.153277Z",
     "shell.execute_reply": "2025-02-24T22:38:08.152027Z"
    },
    "papermill": {
     "duration": 0.156327,
     "end_time": "2025-02-24T22:38:08.155428",
     "exception": false,
     "start_time": "2025-02-24T22:38:07.999101",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/pandas/core/computation/expressions.py:73: RuntimeWarning: invalid value encountered in greater\n",
      "  return op(a, b)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_name</th>\n",
       "      <th>artist(s)_name</th>\n",
       "      <th>artist_count</th>\n",
       "      <th>released_year</th>\n",
       "      <th>released_month</th>\n",
       "      <th>released_day</th>\n",
       "      <th>in_spotify_playlists</th>\n",
       "      <th>in_spotify_charts</th>\n",
       "      <th>streams</th>\n",
       "      <th>in_apple_playlists</th>\n",
       "      <th>...</th>\n",
       "      <th>acousticness_%</th>\n",
       "      <th>instrumentalness_%</th>\n",
       "      <th>liveness_%</th>\n",
       "      <th>speechiness_%</th>\n",
       "      <th>release_date</th>\n",
       "      <th>release_day_name</th>\n",
       "      <th>release_quarter</th>\n",
       "      <th>is_weekend</th>\n",
       "      <th>added_Decade</th>\n",
       "      <th>Energy_level_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>Still With You</td>\n",
       "      <td>Jung Kook</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>31</td>\n",
       "      <td>39</td>\n",
       "      <td>38411956.0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>83</td>\n",
       "      <td>4</td>\n",
       "      <td>2020-06-05</td>\n",
       "      <td>Friday</td>\n",
       "      <td>2</td>\n",
       "      <td>No</td>\n",
       "      <td>2020's</td>\n",
       "      <td>Medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>Peaches (from The Super Mario Bros. Movie)</td>\n",
       "      <td>Jack Black</td>\n",
       "      <td>1</td>\n",
       "      <td>2023</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>68216992.0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>2023-04-07</td>\n",
       "      <td>Friday</td>\n",
       "      <td>2</td>\n",
       "      <td>No</td>\n",
       "      <td>2020's</td>\n",
       "      <td>Low</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     track_name artist(s)_name  artist_count  \\\n",
       "94                               Still With You      Jung Kook             1   \n",
       "327  Peaches (from The Super Mario Bros. Movie)     Jack Black             1   \n",
       "\n",
       "     released_year  released_month  released_day  in_spotify_playlists  \\\n",
       "94            2020               6             5                    31   \n",
       "327           2023               4             7                    34   \n",
       "\n",
       "     in_spotify_charts     streams  in_apple_playlists  ...  acousticness_%  \\\n",
       "94                  39  38411956.0                   2  ...               9   \n",
       "327                  0  68216992.0                   0  ...              79   \n",
       "\n",
       "    instrumentalness_%  liveness_% speechiness_%  release_date  \\\n",
       "94                   0          83             4    2020-06-05   \n",
       "327                  0          10             5    2023-04-07   \n",
       "\n",
       "    release_day_name release_quarter  is_weekend  added_Decade  \\\n",
       "94            Friday               2          No        2020's   \n",
       "327           Friday               2          No        2020's   \n",
       "\n",
       "     Energy_level_category  \n",
       "94                  Medium  \n",
       "327                    Low  \n",
       "\n",
       "[2 rows x 30 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "high_stream_low_appearance = df[(df['streams'] > 10_000_000) & (df['in_spotify_playlists'] < 50)]\n",
    "high_stream_low_appearance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb8fc423",
   "metadata": {
    "papermill": {
     "duration": 0.015686,
     "end_time": "2025-02-24T22:38:08.187618",
     "exception": false,
     "start_time": "2025-02-24T22:38:08.171932",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6735064,
     "sourceId": 10844684,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.871514,
   "end_time": "2025-02-24T22:38:09.026123",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-24T22:37:58.154609",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
