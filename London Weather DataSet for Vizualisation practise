{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10407428,"sourceType":"datasetVersion","datasetId":6449437}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"List of all the practise Questions :------>\n\n\n\n1. Data Preprocessing---->\n\n1)    Convert the date column into a datetime format and create new columns for year, month, and day.\n\n\n2)    Check for missing values in the dataset and handle them appropriately:\n        Impute missing values in snow_depth with 0 or use an interpolation method.\n        Drop rows with missing values for critical fields like max_temp.\n\n\n\n3)    Normalize the global_radiation column to a 0-1 range.\n\n\n\n\n\n\n---------------------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n2. Exploratory Data Analysis (EDA)\n\n\n\n\nGeneral Trends:\n        4. Plot the yearly trend of mean_temp. Is there evidence of warming over the years?\n        5. Calculate and visualize the average precipitation per month. Which months receive the most rain?\n\nDistributions:\n        6. Plot the distribution of max_temp and min_temp. Are they normally distributed?\n        7. Compare the distributions of sunshine during summer (June-August) and winter (December-February).\n\nCorrelations:\n        8. Compute and visualize the correlation matrix. Which variables are strongly correlated with max_temp?\n\nExtreme Events:\n        9. Identify the top 5 days with the highest precipitation and lowest mean_temp.\n\n\n\n\n---------------------------------------------------------------------------------------------------------\n\n\n\n\n3. Advanced Questions\n\n\nSeasonal Analysis:\n\n        10. Group the data by season (Spring, Summer, Autumn, Winter) and calculate:\n        Average mean_temp.\n        Total precipitation.\n        Average sunshine.\n\n\nWeather Extremes:\n\n        11. Which year had the most extreme weather (e.g., maximum global_radiation or max_temp)?\n\n\n\nTrend Analysis:\n\n        12. Perform a rolling average on mean_temp for a 10-year window and visualize the trend.\n\n\n\n\n\n\n\n\n\n\n\n4. Visualizations\n\n        13. Create a heatmap to visualize the monthly average mean_temp over the years.\n\n        14. Generate a line plot showing the relationship between cloud_cover and sunshine.\n\n        15. Create a scatter plot to visualize the relationship between global_radiation and mean_temp, with points colored by month.\n\n\n\n\n\n\n\n\n\n\n\n\n5. Time Series Analysis\n\n        16. Decompose the mean_temp column into trend, seasonality, and residuals using a time-series decomposition method.\n\n        17. Use a moving average to smooth the precipitation data and detect anomalies (e.g., unusually high rainfall).\n\n\n\n\n\n\n\n\n\n\n\n\n6.Insights and Storytelling\n\n\n\nSummarize key insights:\n\n\n\n\n        18. How does cloud cover affect sunshine and temperature?\n\n        19. What are the trends in temperature and precipitation over the years?\n\n        20. Which months or years experienced unusual weather patterns?\n\n\n\n\n","metadata":{}},{"cell_type":"code","source":"import os\n\n# List all files and folders in /kaggle/input\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.549888Z","iopub.execute_input":"2025-01-15T19:47:13.550395Z","iopub.status.idle":"2025-01-15T19:47:13.557578Z","shell.execute_reply.started":"2025-01-15T19:47:13.550340Z","shell.execute_reply":"2025-01-15T19:47:13.556609Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Correct file path based on the output\nfile_path = \"/kaggle/input/london-weather-dataset-for-data-viz-practise/london_weather.csv\"\n\n# Load the CSV file\ntry:\n    df = pd.read_csv(file_path)\n    print(\"Dataset loaded successfully.\")\n    print(df.head())\nexcept FileNotFoundError:\n    print(f\"File not found: {file_path}. Please check the file path.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.559234Z","iopub.execute_input":"2025-01-15T19:47:13.559503Z","iopub.status.idle":"2025-01-15T19:47:13.608360Z","shell.execute_reply.started":"2025-01-15T19:47:13.559479Z","shell.execute_reply":"2025-01-15T19:47:13.607210Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.610621Z","iopub.execute_input":"2025-01-15T19:47:13.611000Z","iopub.status.idle":"2025-01-15T19:47:13.623154Z","shell.execute_reply.started":"2025-01-15T19:47:13.610970Z","shell.execute_reply":"2025-01-15T19:47:13.622034Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['date'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.624942Z","iopub.execute_input":"2025-01-15T19:47:13.625360Z","iopub.status.idle":"2025-01-15T19:47:13.642280Z","shell.execute_reply.started":"2025-01-15T19:47:13.625328Z","shell.execute_reply":"2025-01-15T19:47:13.640846Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"1. Convert the date column into a datetime format and create new columns for year, month, and day.","metadata":{}},{"cell_type":"code","source":"# Ensure the 'date' column is treated as a string\ndf['date'] = df['date'].astype(str)\n\n# Convert the 'date' column to datetime using the correct format\ndf['date'] = pd.to_datetime(df['date'], format='%Y%m%d')\n\n# Extract year, month, and day into new columns\ndf['Year'] = df['date'].dt.year\ndf['Month'] = df['date'].dt.month\ndf['Day'] = df['date'].dt.day\n\n# Display a sample of the DataFrame\nprint(df[['date', 'Year', 'Month', 'Day']].head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.643560Z","iopub.execute_input":"2025-01-15T19:47:13.643913Z","iopub.status.idle":"2025-01-15T19:47:13.675936Z","shell.execute_reply.started":"2025-01-15T19:47:13.643885Z","shell.execute_reply":"2025-01-15T19:47:13.674893Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['Month'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.677014Z","iopub.execute_input":"2025-01-15T19:47:13.677311Z","iopub.status.idle":"2025-01-15T19:47:13.691248Z","shell.execute_reply.started":"2025-01-15T19:47:13.677278Z","shell.execute_reply":"2025-01-15T19:47:13.689870Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.isnull().sum()              # checking null values.","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.692573Z","iopub.execute_input":"2025-01-15T19:47:13.693007Z","iopub.status.idle":"2025-01-15T19:47:13.710952Z","shell.execute_reply.started":"2025-01-15T19:47:13.692972Z","shell.execute_reply":"2025-01-15T19:47:13.709690Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"2. Check for missing values in the dataset and handle them appropriately:\n        \n\nImpute missing values in snow_depth with 0 or use an interpolation method.\n        \n    \n    \nDrop rows with missing values for critical fields like max_temp.","metadata":{}},{"cell_type":"code","source":"df['snow_depth'] = df['snow_depth'].interpolate(method = 'linear', limit_direction = 'forward', )","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.713921Z","iopub.execute_input":"2025-01-15T19:47:13.714232Z","iopub.status.idle":"2025-01-15T19:47:13.726469Z","shell.execute_reply.started":"2025-01-15T19:47:13.714207Z","shell.execute_reply":"2025-01-15T19:47:13.725331Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.head(2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.729033Z","iopub.execute_input":"2025-01-15T19:47:13.729353Z","iopub.status.idle":"2025-01-15T19:47:13.756626Z","shell.execute_reply.started":"2025-01-15T19:47:13.729328Z","shell.execute_reply":"2025-01-15T19:47:13.755559Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['snow_depth'].isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.757929Z","iopub.execute_input":"2025-01-15T19:47:13.758408Z","iopub.status.idle":"2025-01-15T19:47:13.765295Z","shell.execute_reply.started":"2025-01-15T19:47:13.758371Z","shell.execute_reply":"2025-01-15T19:47:13.764313Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Question 2.2\n\n\nDrop rows with missing values for critical fields like max_temp.","metadata":{}},{"cell_type":"code","source":"df = df.dropna(subset=['max_temp'])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.766451Z","iopub.execute_input":"2025-01-15T19:47:13.766780Z","iopub.status.idle":"2025-01-15T19:47:13.788191Z","shell.execute_reply.started":"2025-01-15T19:47:13.766755Z","shell.execute_reply":"2025-01-15T19:47:13.786951Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['max_temp'].isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.789076Z","iopub.execute_input":"2025-01-15T19:47:13.789335Z","iopub.status.idle":"2025-01-15T19:47:13.797825Z","shell.execute_reply.started":"2025-01-15T19:47:13.789312Z","shell.execute_reply":"2025-01-15T19:47:13.796729Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"3. Normalize the global_radiation column to a 0-1 range.","metadata":{}},{"cell_type":"markdown","source":" formula to calculate normalization --->  x − x.min / x.max - x.min\n","metadata":{}},{"cell_type":"code","source":"df['global_radiation']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.798944Z","iopub.execute_input":"2025-01-15T19:47:13.799250Z","iopub.status.idle":"2025-01-15T19:47:13.819268Z","shell.execute_reply.started":"2025-01-15T19:47:13.799211Z","shell.execute_reply":"2025-01-15T19:47:13.818067Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['Normalized_global_radiation'] = (df['global_radiation'] - df['global_radiation'].min()) / (df['global_radiation'].max() - df['global_radiation'].min())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.820479Z","iopub.execute_input":"2025-01-15T19:47:13.820884Z","iopub.status.idle":"2025-01-15T19:47:13.839297Z","shell.execute_reply.started":"2025-01-15T19:47:13.820855Z","shell.execute_reply":"2025-01-15T19:47:13.838118Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['Normalized_global_radiation'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.840688Z","iopub.execute_input":"2025-01-15T19:47:13.841084Z","iopub.status.idle":"2025-01-15T19:47:13.856207Z","shell.execute_reply.started":"2025-01-15T19:47:13.841049Z","shell.execute_reply":"2025-01-15T19:47:13.854679Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"General Trends:\n        \n\n4.  Plot the yearly trend of mean_temp. Is there evidence of warming over the years?","metadata":{}},{"cell_type":"code","source":"df['date'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.857548Z","iopub.execute_input":"2025-01-15T19:47:13.858182Z","iopub.status.idle":"2025-01-15T19:47:13.878639Z","shell.execute_reply.started":"2025-01-15T19:47:13.858130Z","shell.execute_reply":"2025-01-15T19:47:13.877452Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"yearly_mean_temp = df.groupby('Year')['mean_temp'].mean().reset_index()\nyearly_mean_temp","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.879845Z","iopub.execute_input":"2025-01-15T19:47:13.880192Z","iopub.status.idle":"2025-01-15T19:47:13.910128Z","shell.execute_reply.started":"2025-01-15T19:47:13.880162Z","shell.execute_reply":"2025-01-15T19:47:13.909067Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\nsns.lineplot(data = yearly_mean_temp, x = 'Year', y = 'mean_temp', marker = 'o', color='purple', sizes= 8)\n\nplt.title('Yearly trend of Mean Temperature', fontsize=16, fontweight='bold', color='darkblue')\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Mean Temperature (°C)', fontsize=12)\n\nplt.grid(linestyle = '--', alpha=0.5)\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:13.911274Z","iopub.execute_input":"2025-01-15T19:47:13.911671Z","iopub.status.idle":"2025-01-15T19:47:14.374235Z","shell.execute_reply.started":"2025-01-15T19:47:13.911630Z","shell.execute_reply":"2025-01-15T19:47:14.373061Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n5. Calculate and visualize the average precipitation per month. Which months receive the most rain?\n\n","metadata":{}},{"cell_type":"code","source":"df['Month'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:14.375492Z","iopub.execute_input":"2025-01-15T19:47:14.375798Z","iopub.status.idle":"2025-01-15T19:47:14.384891Z","shell.execute_reply.started":"2025-01-15T19:47:14.375769Z","shell.execute_reply":"2025-01-15T19:47:14.383630Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:14.386101Z","iopub.execute_input":"2025-01-15T19:47:14.386412Z","iopub.status.idle":"2025-01-15T19:47:14.403783Z","shell.execute_reply.started":"2025-01-15T19:47:14.386385Z","shell.execute_reply":"2025-01-15T19:47:14.402831Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"average_precipitation = df.groupby('Month')['precipitation'].mean().reset_index()\naverage_precipitation","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:14.404837Z","iopub.execute_input":"2025-01-15T19:47:14.405220Z","iopub.status.idle":"2025-01-15T19:47:14.429069Z","shell.execute_reply.started":"2025-01-15T19:47:14.405179Z","shell.execute_reply":"2025-01-15T19:47:14.427953Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\nsns.lineplot(data = average_precipitation, x = 'Month', y = 'precipitation', size = 8, marker = 'd', color = 'purple')\n\nplt.title('Monthly trend of Average Precipitation', fontsize = 15)\nplt.xlabel('Month', fontsize = 12)\nplt.ylabel('Average Precipitation', fontsize = 12)\n\nplt.grid(linestyle = '--', alpha = 0.5)\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:14.430266Z","iopub.execute_input":"2025-01-15T19:47:14.430577Z","iopub.status.idle":"2025-01-15T19:47:14.901894Z","shell.execute_reply.started":"2025-01-15T19:47:14.430551Z","shell.execute_reply":"2025-01-15T19:47:14.900775Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\nsns.barplot(data = average_precipitation, x = 'Month', y = 'precipitation', palette='Blues')\n\nplt.title('Monthly Average Precipitation', fontsize = 15)\nplt.xlabel('Month', fontsize = 12)\nplt.ylabel('Average Precipitation', fontsize = 12)\n\nplt.grid(linestyle = '--', alpha = 0.5)\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:14.907288Z","iopub.execute_input":"2025-01-15T19:47:14.907648Z","iopub.status.idle":"2025-01-15T19:47:15.220561Z","shell.execute_reply.started":"2025-01-15T19:47:14.907618Z","shell.execute_reply":"2025-01-15T19:47:15.219714Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n\n\nDistributions:\n        \n\n\n6. Plot the distribution of max_temp and min_temp. Are they normally distributed?\n\n\n\n7. Compare the distributions of sunshine during summer (June-August) and winter (December-February).\n\n\n\n\n\n","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nsns.histplot(data = df, x = 'max_temp', color ='pink', bins = 20, multiple = 'stack', kde = True)\nsns.histplot(data = df, x = 'min_temp', palette='blue', bins = 20, multiple = 'stack', kde = True)\n\n\nplt.title('Distribution of Max and Min Temperatures', fontsize=16)\nplt.xlabel('Temperature (°C)', fontsize=12)\nplt.ylabel('Frequency', fontsize=12)\nplt.legend(title='Temperature Type', fontsize=10)\n\nplt.grid(linestyle='--', alpha=0.5)\nplt.legend(title='Temperature Type', fontsize=10)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:15.223328Z","iopub.execute_input":"2025-01-15T19:47:15.223665Z","iopub.status.idle":"2025-01-15T19:47:15.953220Z","shell.execute_reply.started":"2025-01-15T19:47:15.223627Z","shell.execute_reply":"2025-01-15T19:47:15.952005Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n7. Compare the distributions of sunshine during summer (June-August) and winter (December-February).\n\n\n\n","metadata":{}},{"cell_type":"code","source":"df['Seasons'] = df['Month'].apply(lambda x : 'Summer' if x in [6,7,8] else 'Winter' if x in [12,1,2] else  'Other')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:15.954657Z","iopub.execute_input":"2025-01-15T19:47:15.955069Z","iopub.status.idle":"2025-01-15T19:47:15.965562Z","shell.execute_reply.started":"2025-01-15T19:47:15.955028Z","shell.execute_reply":"2025-01-15T19:47:15.964656Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['Seasons'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:15.966833Z","iopub.execute_input":"2025-01-15T19:47:15.967230Z","iopub.status.idle":"2025-01-15T19:47:15.989239Z","shell.execute_reply.started":"2025-01-15T19:47:15.967196Z","shell.execute_reply":"2025-01-15T19:47:15.988191Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"summer_data = df[df['Seasons'] == 'Summer']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:15.990410Z","iopub.execute_input":"2025-01-15T19:47:15.990847Z","iopub.status.idle":"2025-01-15T19:47:16.009292Z","shell.execute_reply.started":"2025-01-15T19:47:15.990807Z","shell.execute_reply":"2025-01-15T19:47:16.008224Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"winter_data = df[df['Seasons'] == 'Winter']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:16.010459Z","iopub.execute_input":"2025-01-15T19:47:16.010778Z","iopub.status.idle":"2025-01-15T19:47:16.031192Z","shell.execute_reply.started":"2025-01-15T19:47:16.010750Z","shell.execute_reply":"2025-01-15T19:47:16.030069Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nsns.histplot(data = summer_data, x = 'sunshine', kde=True, color='orange', label='Summer', bins=20, alpha=0.7)\nsns.histplot(data = winter_data, x = 'sunshine', kde=True, color='blue', label='Winter', bins=20, alpha=0.7)\n\nplt.title('Distribution of Sunshine in Summer vs Winter', fontsize=16)\nplt.xlabel('Hours of Sunshine', fontsize=12)\nplt.ylabel('Frequency', fontsize=12)\n\n\nplt.legend(title='Season', fontsize=10)\nplt.grid(linestyle='--', alpha=0.5)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:16.032316Z","iopub.execute_input":"2025-01-15T19:47:16.032640Z","iopub.status.idle":"2025-01-15T19:47:16.633096Z","shell.execute_reply.started":"2025-01-15T19:47:16.032576Z","shell.execute_reply":"2025-01-15T19:47:16.631870Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"summer_data['sunshine'].mode","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:16.634096Z","iopub.execute_input":"2025-01-15T19:47:16.634497Z","iopub.status.idle":"2025-01-15T19:47:16.642719Z","shell.execute_reply.started":"2025-01-15T19:47:16.634466Z","shell.execute_reply":"2025-01-15T19:47:16.641746Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\nCorrelations:\n\n\n        8. \n        \n        \n        \n        \n        Compute and visualize the correlation matrix. Which variables are strongly correlated with max_temp?\n\n\n\n","metadata":{}},{"cell_type":"code","source":"correlation_matrix = df.corr(numeric_only = True)\ncorrelation_matrix","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:16.643671Z","iopub.execute_input":"2025-01-15T19:47:16.643992Z","iopub.status.idle":"2025-01-15T19:47:16.689860Z","shell.execute_reply.started":"2025-01-15T19:47:16.643963Z","shell.execute_reply":"2025-01-15T19:47:16.688788Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nsns.heatmap(data = correlation_matrix, linewidths = 2, linecolor = 'pink', annot = True, cmap = 'coolwarm', cbar = True)\n\n\nplt.title('Correlation Heatmap', fontsize=16)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:16.690807Z","iopub.execute_input":"2025-01-15T19:47:16.691089Z","iopub.status.idle":"2025-01-15T19:47:17.596089Z","shell.execute_reply.started":"2025-01-15T19:47:16.691057Z","shell.execute_reply":"2025-01-15T19:47:17.594891Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\nExtreme Events:\n\n\n        9. Identify the top 5 days with the highest precipitation and lowest mean_temp.\n\n\n","metadata":{}},{"cell_type":"code","source":"df['precipitation'].max()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.597158Z","iopub.execute_input":"2025-01-15T19:47:17.597469Z","iopub.status.idle":"2025-01-15T19:47:17.604573Z","shell.execute_reply.started":"2025-01-15T19:47:17.597443Z","shell.execute_reply":"2025-01-15T19:47:17.603583Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"highest_precipitation = df.nlargest(5,'precipitation')\nhighest_precipitation","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.605669Z","iopub.execute_input":"2025-01-15T19:47:17.606032Z","iopub.status.idle":"2025-01-15T19:47:17.649829Z","shell.execute_reply.started":"2025-01-15T19:47:17.606004Z","shell.execute_reply":"2025-01-15T19:47:17.648752Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"lowest_mean_temp = df.nsmallest(5,'mean_temp')\nlowest_mean_temp","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.650939Z","iopub.execute_input":"2025-01-15T19:47:17.651235Z","iopub.status.idle":"2025-01-15T19:47:17.676702Z","shell.execute_reply.started":"2025-01-15T19:47:17.651208Z","shell.execute_reply":"2025-01-15T19:47:17.675713Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n\nBar Plot for Lowest Mean Temperature Days\n\n\n\n\n\n","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10, 5))\n\n\nsns.barplot(data=lowest_mean_temp, x='date', y='mean_temp', palette='coolwarm')\n\nplt.title('Top 5 Days with the Lowest Mean Temperature', fontsize=14)\nplt.xlabel('Date', fontsize=12)\nplt.ylabel('Mean Temperature (°C)', fontsize=12)\n\n\n\nplt.xticks(rotation=45)\n\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.677796Z","iopub.execute_input":"2025-01-15T19:47:17.678159Z","iopub.status.idle":"2025-01-15T19:47:17.920469Z","shell.execute_reply.started":"2025-01-15T19:47:17.678122Z","shell.execute_reply":"2025-01-15T19:47:17.919331Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"10. Group the data by season (Spring, Summer, Autumn, Winter) and calculate:\n\n\n        Average mean_temp.\n        Total precipitation.\n        Average sunshine.","metadata":{}},{"cell_type":"code","source":"df['New_Seasons'] = df['Month'].apply(lambda x : 'Winter' if x in [12,1,2] \n                                      else 'Spring' if x in [3,4,5] else 'Summer' if x in [6,7,8] else 'Autumn')\ndf.head(2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.921520Z","iopub.execute_input":"2025-01-15T19:47:17.921927Z","iopub.status.idle":"2025-01-15T19:47:17.945507Z","shell.execute_reply.started":"2025-01-15T19:47:17.921890Z","shell.execute_reply":"2025-01-15T19:47:17.944702Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"seasonal_trend = df.groupby('New_Seasons').agg(average_mean_temp = ('mean_temp','mean'),total_precipitation = ('precipitation','sum'),\n                                              average_sunshine = ('sunshine','mean')).reset_index()\nseasonal_trend","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.946702Z","iopub.execute_input":"2025-01-15T19:47:17.947065Z","iopub.status.idle":"2025-01-15T19:47:17.985990Z","shell.execute_reply.started":"2025-01-15T19:47:17.947028Z","shell.execute_reply":"2025-01-15T19:47:17.984757Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"11. \n\n\n\nWhich year had the most extreme weather (e.g., maximum global_radiation or max_temp)?","metadata":{}},{"cell_type":"code","source":"max_global_radiation_year = df.nlargest(1,'global_radiation')\n\nprint('The year with maximum global raidiation is')\nprint(max_global_radiation_year[['Year','global_radiation']].to_string(index=False))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:17.987226Z","iopub.execute_input":"2025-01-15T19:47:17.987636Z","iopub.status.idle":"2025-01-15T19:47:18.000310Z","shell.execute_reply.started":"2025-01-15T19:47:17.987571Z","shell.execute_reply":"2025-01-15T19:47:17.999382Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"max_max_temp = df.nlargest(1,'max_temp')\n\nprint('The year with maximum temperature is')\nprint(max_max_temp[['Year','max_temp']].to_string(index=False))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.001314Z","iopub.execute_input":"2025-01-15T19:47:18.001568Z","iopub.status.idle":"2025-01-15T19:47:18.027100Z","shell.execute_reply.started":"2025-01-15T19:47:18.001546Z","shell.execute_reply":"2025-01-15T19:47:18.025722Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Trend Analysis:\n\n\n\n\n12. Perform a rolling average on mean_temp for a 10-year window and visualize the trend.","metadata":{}},{"cell_type":"code","source":"year_wise_grouped_mean_temp = df.groupby('Year')['mean_temp'].mean().reset_index()\nyear_wise_grouped_mean_temp.head(2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.028156Z","iopub.execute_input":"2025-01-15T19:47:18.028437Z","iopub.status.idle":"2025-01-15T19:47:18.046184Z","shell.execute_reply.started":"2025-01-15T19:47:18.028410Z","shell.execute_reply":"2025-01-15T19:47:18.045147Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"year_wise_grouped_mean_temp['10_Year_Average'] = year_wise_grouped_mean_temp['mean_temp'].rolling(window=10).mean()\nyear_wise_grouped_mean_temp.tail(2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.047223Z","iopub.execute_input":"2025-01-15T19:47:18.047573Z","iopub.status.idle":"2025-01-15T19:47:18.059792Z","shell.execute_reply.started":"2025-01-15T19:47:18.047547Z","shell.execute_reply":"2025-01-15T19:47:18.058856Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nplt.plot(year_wise_grouped_mean_temp['Year'], year_wise_grouped_mean_temp['mean_temp'], label = 'Yearly Mean Temp', color='blue', alpha=0.5, marker = 'o')\nplt.plot(year_wise_grouped_mean_temp['Year'], year_wise_grouped_mean_temp['10_Year_Average'], label = '10-Year Rolling Avg', color='red', linewidth=2, marker = 'o')\n\n\nplt.title('10-Year Rolling Average of Mean Temperature', fontsize=16)\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Mean Temperature', fontsize=12)\n\n\nplt.legend()\nplt.grid(True)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.060711Z","iopub.execute_input":"2025-01-15T19:47:18.060976Z","iopub.status.idle":"2025-01-15T19:47:18.363836Z","shell.execute_reply.started":"2025-01-15T19:47:18.060953Z","shell.execute_reply":"2025-01-15T19:47:18.362715Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"13. \n\n\n\n\n\n\nCreate a heatmap to visualize the monthly average mean_temp over the years.","metadata":{}},{"cell_type":"code","source":"year_month_average = df.groupby(['Year','Month'])['mean_temp'].mean().reset_index()\nyear_month_average.head(2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.364953Z","iopub.execute_input":"2025-01-15T19:47:18.365223Z","iopub.status.idle":"2025-01-15T19:47:18.380853Z","shell.execute_reply.started":"2025-01-15T19:47:18.365199Z","shell.execute_reply":"2025-01-15T19:47:18.379730Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"heatmap_data = year_month_average.pivot(index='Year', columns='Month', values='mean_temp')\n\n\nplt.figure(figsize=(12, 6))\n\n\nsns.heatmap(heatmap_data, cmap='coolwarm', annot=False, cbar_kws={'label': 'Average Mean Temperature'})\n\n\nplt.title('Monthly Average Mean Temperature Over the Years')\nplt.xlabel('Month')\nplt.ylabel('Year')\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.382060Z","iopub.execute_input":"2025-01-15T19:47:18.382364Z","iopub.status.idle":"2025-01-15T19:47:18.997869Z","shell.execute_reply.started":"2025-01-15T19:47:18.382337Z","shell.execute_reply":"2025-01-15T19:47:18.996734Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n\n14. \n\n\n\n\nGenerate a line plot showing the relationship between cloud_cover and sunshine.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nplt.plot(df['cloud_cover'], df['sunshine'], label = 'Yearly Cloud Cover and Sunshine', color='blue', alpha=0.5, marker = 'o')\n\n\nplt.title('Relationship b/w Cloud-Cover and Sunshine', fontsize=16)\nplt.xlabel('Cloud Cover (%)', fontsize=12)\nplt.ylabel('Sunshine (hours)', fontsize=12)\n\n\nplt.legend()\nplt.grid(True)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:18.999072Z","iopub.execute_input":"2025-01-15T19:47:18.999371Z","iopub.status.idle":"2025-01-15T19:47:20.553166Z","shell.execute_reply.started":"2025-01-15T19:47:18.999344Z","shell.execute_reply":"2025-01-15T19:47:20.552121Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Different Approach to above question using Scatter Plot.\n\n\n\n    \n14. \n\n\n\n\n\n\nGenerate a line plot showing the relationship between cloud_cover and sunshine.\n\n\n\n\n    ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nsns.scatterplot(data = df, x = 'cloud_cover', y = 'sunshine',label='Cloud Cover vs Sunshine', color='blue', alpha=0.7, )\n\n\nplt.title('Relationship b/w Cloud-Cover and Sunshine', fontsize=16)\n\n\nplt.legend()\nplt.grid(True)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:20.554198Z","iopub.execute_input":"2025-01-15T19:47:20.554698Z","iopub.status.idle":"2025-01-15T19:47:21.135146Z","shell.execute_reply.started":"2025-01-15T19:47:20.554650Z","shell.execute_reply":"2025-01-15T19:47:21.134025Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n15. \n\n\n\nCreate a scatter plot to visualize the relationship between global_radiation and mean_temp, with points colored by month.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n\nsns.scatterplot(df, x = 'global_radiation', y = 'mean_temp', hue = 'Month',style='Month', palette='viridis', markers = True, alpha = 0.7)\n\nplt.title('Relationship between Global Radiation and Mean Temperature', fontsize = 16)\nplt.xlabel('Global Radiation', fontsize=12)\nplt.ylabel('Mean Temperature', fontsize=12)\n\n\nplt.legend(title='Month', loc='upper left', bbox_to_anchor=(1, 1), fontsize=10)\nplt.grid(True, linestyle = '--', alpha = 0.7 )\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:21.136466Z","iopub.execute_input":"2025-01-15T19:47:21.136873Z","iopub.status.idle":"2025-01-15T19:47:22.445491Z","shell.execute_reply.started":"2025-01-15T19:47:21.136834Z","shell.execute_reply":"2025-01-15T19:47:22.444283Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Time Series Analysis\n\n 16. Decompose the mean_temp column into trend, seasonality, and residuals using a time-series decomposition method.\n\n","metadata":{}},{"cell_type":"code","source":"from statsmodels.tsa.seasonal import seasonal_decompose","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:22.446863Z","iopub.execute_input":"2025-01-15T19:47:22.447387Z","iopub.status.idle":"2025-01-15T19:47:22.540524Z","shell.execute_reply.started":"2025-01-15T19:47:22.447337Z","shell.execute_reply":"2025-01-15T19:47:22.539739Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Fill missing values using forward fill (you can use other methods too)\n\ndf['mean_temp'].fillna(method='ffill', inplace=True)  # forward fill\n\n\n# Or use interpolation\n# df['mean_temp'] = df['mean_temp'].interpolate()\n\n# Proceed with the decomposition after filling missing values\ndecomposition = seasonal_decompose(df['mean_temp'], model='additive', period=12)\n\n# Plot the decomposition components\nplt.figure(figsize=(14, 8))\ndecomposition.plot()\nplt.suptitle('Time Series Decomposition of Mean Temperature', fontsize=16)\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:22.541657Z","iopub.execute_input":"2025-01-15T19:47:22.542320Z","iopub.status.idle":"2025-01-15T19:47:23.467063Z","shell.execute_reply.started":"2025-01-15T19:47:22.542283Z","shell.execute_reply":"2025-01-15T19:47:23.465895Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n17. \n\n\n\n\nUse a moving average to smooth the precipitation data and detect anomalies (e.g., unusually high rainfall).\n\n\n\n","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\n# Convert 'date' column to datetime if it's not already, and reset if it's the index\n\nif 'date' not in df.columns and df.index.name == 'date':\n    df.reset_index(inplace=True)\n\n\ndf['date'] = pd.to_datetime(df['date'])     #'date' is in datetime format\ndf.set_index('date', inplace=True)          # Set 'date' as the index\n\n\n# Calculate the moving average with a window size (e.g., 7 days)\nwindow_size = 7\ndf['moving_avg'] = df['precipitation'].rolling(window=window_size).mean()\n\n\n# Detect anomalies: precipitation significantly higher than the moving average\nthreshold = 2  # Define the threshold (e.g., 2 standard deviations)\nstd_dev = df['precipitation'].std()  # Calculate standard deviation\ndf['anomaly'] = df['precipitation'] > (df['moving_avg'] + threshold * std_dev)\n\n\n# Plot the results\nplt.figure(figsize=(14, 8))\n\n\n# Plot precipitation and moving average\nplt.plot(df.index, df['precipitation'], label='Precipitation', color='blue', alpha=0.7)\nplt.plot(df.index, df['moving_avg'], label=f'Moving Average ({window_size} days)', color='orange', linewidth=2)\n\n\n# Highlight anomalies\nplt.scatter(df.index[df['anomaly']], df['precipitation'][df['anomaly']], color='red', label='Anomalies', zorder=5)\n\n\n# Add titles and labels\nplt.title('Precipitation with Moving Average and Anomalies', fontsize=16)\nplt.xlabel('Date', fontsize=12)\nplt.ylabel('Precipitation', fontsize=12)\n\n\nplt.legend()\nplt.grid(True)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:23.468300Z","iopub.execute_input":"2025-01-15T19:47:23.468708Z","iopub.status.idle":"2025-01-15T19:47:24.412938Z","shell.execute_reply.started":"2025-01-15T19:47:23.468667Z","shell.execute_reply":"2025-01-15T19:47:24.411844Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"\ndf.reset_index(inplace=True)\n\n\nif 'index' in df.columns:\n    df.drop(columns=['index'], inplace=True)\n\n# Confirm the changes\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:24.413961Z","iopub.execute_input":"2025-01-15T19:47:24.414231Z","iopub.status.idle":"2025-01-15T19:47:24.436288Z","shell.execute_reply.started":"2025-01-15T19:47:24.414206Z","shell.execute_reply":"2025-01-15T19:47:24.435320Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"6.Insights and Storytelling\n\nSummarize key insights:\n\n    18. How does cloud cover affect sunshine and temperature?\n\n    19. What are the trends in temperature and precipitation over the years?\n\n    20. Which months or years experienced unusual weather patterns?","metadata":{}},{"cell_type":"markdown","source":"18. How does cloud cover affect sunshine and temperature?","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize = (10,6))\n\n\nsns.scatterplot(data = df, x = 'cloud_cover', y = 'sunshine', alpha = 0.7, color='blue')\n\n\nplt.title('Relationship between Cloud Cover and Sunshine', fontsize=16)\nplt.xlabel('Cloud Cover (%)', fontsize=12)\nplt.ylabel('Sunshine (hours)', fontsize=12)\n\nplt.grid(True, linestyle='--', alpha=0.5)\n\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:24.437340Z","iopub.execute_input":"2025-01-15T19:47:24.437985Z","iopub.status.idle":"2025-01-15T19:47:24.895229Z","shell.execute_reply.started":"2025-01-15T19:47:24.437938Z","shell.execute_reply":"2025-01-15T19:47:24.894203Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.head(2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:24.896352Z","iopub.execute_input":"2025-01-15T19:47:24.896645Z","iopub.status.idle":"2025-01-15T19:47:24.915284Z","shell.execute_reply.started":"2025-01-15T19:47:24.896585Z","shell.execute_reply":"2025-01-15T19:47:24.914338Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n\n\n19.\n\n\n\n\n\n\n            What are the trends in temperature and precipitation over the years?\n\n\n\n\n\n","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize = (10,6))\n\nsns.lineplot(data = df, x = 'Year', y = 'precipitation', color = 'blue', label = 'Precipitation')\nsns.lineplot(data = df, x = 'Year',y = 'mean_temp', color = 'red', label = 'Mean Temperature')\n\nplt.title('Yearly trend of Precipitation and Mean Temperature', fontsize = 15)\nplt.xlabel('Year', fontsize = 12)\nplt.ylabel('Values', fontsize = 12)\n\nplt.grid(linestyle = '--', alpha = 0.5)\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T19:47:24.916372Z","iopub.execute_input":"2025-01-15T19:47:24.916757Z","iopub.status.idle":"2025-01-15T19:47:27.255983Z","shell.execute_reply.started":"2025-01-15T19:47:24.916717Z","shell.execute_reply":"2025-01-15T19:47:27.254811Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}